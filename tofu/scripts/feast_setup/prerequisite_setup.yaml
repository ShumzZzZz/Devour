# Configure container storage interface
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: aws-ebs-sc
provisioner: ebs.csi.aws.com
parameters:
  type: gp3  # or gp2, io1, etc. based on your requirements
reclaimPolicy: Delete # Retain
volumeBindingMode: WaitForFirstConsumer
---
## Static provisioning: PersistentVolume for PostgreSQL data
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: postgres-pv
#spec:
#  storageClassName: aws-ebs-sc
#  capacity:
#    storage: 1Gi
#  accessModes:
#    - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Retain
#  awsElasticBlockStore:
#    volumeID: "YOUR_EBS_VOLUME_ID"
#    fsType: ext4
#    readOnly: false
#---
## Static provisioning: PersistentVolume for Redis data
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: redis-pv
#spec:
#  storageClassName: aws-ebs-sc
#  capacity:
#    storage: 2Gi
#  accessModes:
#    - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Retain
#  awsElasticBlockStore:
#    volumeID: "YOUR_EBS_VOLUME_ID"
#    fsType: ext4
#    readOnly: false
#---

# Secret for sensitive environment variables (passwords)
apiVersion: v1
kind: Secret
metadata:
  name: feast-secret
  namespace: feast
type: Opaque
stringData:
  POSTGRES_PASSWORD: "pgfeastpassword"
  PGADMIN_DEFAULT_PASSWORD: "pgadminpassword"
---
# ConfigMap for non-sensitive environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: feast-config
  namespace: feast
data:
  POSTGRES_USER: "feastuser"
  POSTGRES_DB: "feastdb"
  PGADMIN_DEFAULT_EMAIL: "admin@example.com"
---
# PersistentVolumeClaim for PostgreSQL data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: feast
spec:
  storageClassName: aws-ebs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# PersistentVolumeClaim for Redis data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: feast
spec:
  storageClassName: aws-ebs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Deployment for PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-feast
  namespace: feast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeSelector: 
        dedicated: featurestore
      tolerations: 
        - key: dedicated
          operator: Equal
          value: featurestore
          effect: NoExecute
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: feast-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: feast-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: feast-config
                  key: POSTGRES_DB
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
#              ephemeral-storage: "100Mi"
              cpu: "200m"
              memory: "256Mi"
            limits:
#              ephemeral-storage: "200Mi"
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# Service for PostgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: feast
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
# Deployment for Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-feast
  namespace: feast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector: 
        dedicated: featurestore
      tolerations: 
        - key: dedicated
          operator: Equal
          value: featurestore
          effect: NoExecute
      containers:
        - name: redis
          image: redis/redis-stack:latest
          ports:
            - containerPort: 6379
            - containerPort: 8001
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          resources:
            requests:
#              ephemeral-storage: "100Mi"
              cpu: "200m"
              memory: "512Mi"
            limits:
#              ephemeral-storage: "200Mi"
              cpu: "600m"
              memory: "1Gi"
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
# Service for Redis
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: feast
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - name: redis-port
      protocol: TCP
      port: 6379
      targetPort: 6379
    - name: redisinsight-port
      protocol: TCP
      port: 8001
      targetPort: 8001
  type: ClusterIP
---
# Deployment for pgAdmin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: feast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      nodeSelector: 
        dedicated: featurestore
      tolerations: 
        - key: dedicated
          operator: Equal
          value: featurestore
          effect: NoExecute
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: feast-config
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: feast-secret
                  key: PGADMIN_DEFAULT_PASSWORD
          resources:
            requests:
#              ephemeral-storage: "100Mi"
              cpu: "50m"
              memory: "128Mi"
            limits:
#              ephemeral-storage: "200Mi"
              cpu: "200m"
              memory: "256Mi"
---
# Service for pgAdmin
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  namespace: feast
  labels:
    app: pgadmin
spec:
  selector:
    app: pgadmin
  ports:
    - name: pgadmin
      protocol: TCP
      port: 5050
      targetPort: 80
  type: ClusterIP